== Next

== High priority

* Uninstall (restore latest (?) backup)
* skipping files
  * how to mark a file as skipped?
  * skipped means "not under coffle control on this machine"
  * skipped files are not installed
  * if already installed, uninstall?


== Documentation

* Not copying directly to target: because it is unclear whether the file was
  installed by coffle
* not .build/.install: because the install operation is something else
* no unescaped names in processing directories: so we can use dotfiles for bookkeeping


=== Backups ===

Goals:
* install (even with --overwrite) followed by uninstall => same as before

Conclusions:
* If on "install" the backup is present and the target is "none" or "other", we
  may not keep the backup because after "uninstall", we would have restored an
  old backup. We also do not want to silently drop the backup after the user
  deletes the coffle link.

Install
=======
target    |backup  ||condition          |backup action |target action |comments
----------+--------++-------------------+--------------+--------------+-------------------
installed |-       ||-                  |-             |-             |already current
----------+--------++-------------------+--------------+--------------+-------------------
none      |none    ||-                  |-             |install       |regular install
other     |none    ||--overwrite        |make          |install       |overwriting install
----------+--------++-------------------+--------------+--------------+-------------------
none      |present ||refuse                                           |target was removed
other     |present ||refuse                                           |target was replaced


Uninstall
=========
target    |backup  ||target action |backup action |comments
----------+--------++--------------+--------------+-------------------------------------
installed |present ||restore       |remove        |restore original file
installed |none    ||remove        |-             |restore (file was not present before)
----------+--------++--------------+--------------+-------------------------------------
none      |none    ||-             |-             |not installed (or: removed and not present before)
other     |none    ||-             |-             |not installed (or: replaced and not present before)
----------+--------++--------------+--------------+-------------------------------------
none      |present ||refuse                       |target was removed
other     |present ||refuse                       |target was replaced



== Low priority

* Special files, like ssh authorized keys: define keys, then invoke keys in
  host blocks:
  {{{
  <% ssh_define_keys do %>
    ssh-dss AAAAB3N...DjB/A martin@magrathea
    ssh-dss AAAAB3N...Y2KjL martin@damogran
  <% end %>

  <% host "sedna" do %>
    <%= ssh_keys "martin@magrathea", "martin@damogran" %>
  <% end %>
  }}}
* colored messages (rainbow gem) (?) (no gem requirements!)
* distinguish preprocessor by file extension
  * additional file name escaping required
  * Pro: different pp possible
  * Con: collision possible
  * Allow unprocessed files.
    * special case of different preprocessor (pro/con see there)
    * symlink directly (target->source instead of ->build)?
      * Pro: changes to file possible
      * Con: 
* Conditionals: host classes, user names
* Specify individual files on the command line
  * Update automessage command to rebuild only this file
* Message if file is not installed on build
* command clean, which cleans source/.build etc.
  * only if nothing is installed, override with --force
  * print a warning that the symlinks are now broken
* facilitate ignoring autogenerated files for revision control
  * move all coffle directories (.build, .install) to coffle?
* coffle init
* coffle import
* allow help message/coffle init even in non-source-directory
* add .coffle_target/ to the target, so we can do coffle commands from there
* better solution for installing a removed or replaced target:
  * switches to drop the old back or the target
  * operation drop_backup
* similarly, allow uninstalling of removed or replaced target with a switch


